name: Build and publish the FNCSF_PDE_EXPORTER

on:
  push:
    branches:
      - master
      - develop
  workflow_dispatch:
    branches:
      - master
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-core-fncsf-pde-exporter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract the branch name to bind to the docker.
        id: branch-name
        uses: tj-actions/branch-names@v6

      - name: Replace the / with - in the branch name
        id: branch-name-parsed
        run: |
          ref="${github_ref////-}"
          echo $ref
          echo "target_branch=$ref" >> $GITHUB_OUTPUT
        env:
          github_ref: ${{ steps.branch-name.outputs.current_branch }}

      - name: Extract metadata (tags, labels) for the pde_fncsf_exporter Docker
        id: meta_fncsf_pde_exporter
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ steps.branch-name-parsed.outputs.target_branch }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ steps.meta_fncsf_pde_exporter.outputs.tags }}
          labels: ${{ steps.meta_fncsf_pde_exporter.outputs.labels }}

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: failure()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}

      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: success()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}